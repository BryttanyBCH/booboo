--- usr/src/nv/nv.c	2009-04-04 19:40:50.000000000 +0400
+++ usr/src/nv/nv.c	2009-04-11 15:58:51.000000000 +0400
@@ -369,7 +369,7 @@
 /* character driver entry points */
 
 static struct file_operations nv_fops = {
-    .owner     = THIS_MODULE,
+//    .owner     = THIS_MODULE,
     .poll      = nv_kern_poll,
     .ioctl     = nv_kern_ioctl,
 #if defined(HAVE_UNLOCKED_IOCTL)
@@ -588,10 +588,11 @@
      * Set the module owner to ensure that the reference
      * count reflects accesses to the proc files.
      */
+/*
     proc_nvidia->owner = THIS_MODULE;
     proc_nvidia_cards->owner = THIS_MODULE;
     proc_nvidia_warnings->owner = THIS_MODULE;
-
+*/
     for (j = 0; j < num_nv_devices; j++)
     {
         nvl = &nv_linux_devices[j];
@@ -610,7 +611,7 @@
 
         entry->data = nv;
         entry->read_proc = nv_kern_read_cardinfo;
-        entry->owner = THIS_MODULE;
+//        entry->owner = THIS_MODULE;
 
         if (nv_find_pci_capability(dev, PCI_CAP_ID_AGP))
         {
@@ -624,7 +625,7 @@
                 goto failed;
             }
 
-            entry->owner = THIS_MODULE;
+//            entry->owner = THIS_MODULE;
             proc_nvidia_agp = entry;
 
             entry = create_proc_entry("status", flags, proc_nvidia_agp);
@@ -635,7 +636,7 @@
 
             entry->data = nv;
             entry->read_proc = nv_kern_read_status;
-            entry->owner = THIS_MODULE;
+//            entry->owner = THIS_MODULE;
 
             entry = create_proc_entry("host-bridge", flags, proc_nvidia_agp);
             if (!entry) {
@@ -645,7 +646,7 @@
 
             entry->data = NULL;
             entry->read_proc = nv_kern_read_agpinfo;
-            entry->owner = THIS_MODULE;
+//            entry->owner = THIS_MODULE;
 
             entry = create_proc_entry("card", flags, proc_nvidia_agp);
             if (!entry) {
@@ -655,7 +656,7 @@
 
             entry->data = nv;
             entry->read_proc = nv_kern_read_agpinfo;
-            entry->owner = THIS_MODULE;
+//            entry->owner = THIS_MODULE;
         }
 
         NV_PCI_DEV_PUT(dev);
@@ -666,14 +667,14 @@
         goto failed;
 
     entry->read_proc = nv_kern_read_version;
-    entry->owner = THIS_MODULE;
+//    entry->owner = THIS_MODULE;
 
     entry = create_proc_entry("registry", flags, proc_nvidia);
     if (!entry)
         goto failed;
 
     entry->read_proc = nv_kern_read_registry;
-    entry->owner = THIS_MODULE;
+//    entry->owner = THIS_MODULE;
 
     return;
 
@@ -700,7 +701,7 @@
 
     entry->data = (void *)message;
     entry->read_proc = nv_kern_read_warning;
-    entry->owner = THIS_MODULE;
+//    entry->owner = THIS_MODULE;
 #endif
 }
 
